"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8962],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>v});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,v=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return n?a.createElement(v,i(i({ref:t},u),{},{components:n})):a.createElement(v,i({ref:t},u))}));function v(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9314:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={slug:"midival-0-0-17-released",title:"New MIDIVal releases: core 0.0.17, node 0.0.2 and react-native!",authors:["kulak"],tags:["midival","release"]},i=void 0,l={permalink:"/blog/midival-0-0-17-released",source:"@site/blog/2022-06-21/index.md",title:"New MIDIVal releases: core 0.0.17, node 0.0.2 and react-native!",description:"MIDIVal Cover",date:"2022-06-21T00:00:00.000Z",formattedDate:"June 21, 2022",tags:[{label:"midival",permalink:"/blog/tags/midival"},{label:"release",permalink:"/blog/tags/release"}],readingTime:2.755,hasTruncateMarker:!0,authors:[{name:"Kacper Kula",title:"Author and Maintainer of MIDIVal",url:"https://github.com/kulak-at",imageURL:"https://avatars.githubusercontent.com/u/2923943?v=4",key:"kulak"}],frontMatter:{slug:"midival-0-0-17-released",title:"New MIDIVal releases: core 0.0.17, node 0.0.2 and react-native!",authors:["kulak"],tags:["midival","release"]},prevItem:{title:"MIDIVal 0.1 release \u2014 now with MPE support!",permalink:"/blog/mpe-support-added"},nextItem:{title:"MIDIVal 0.0.16: now with MIDI Clock support",permalink:"/blog/midival-0-0-16-with-midi-clock-support"}},s={authorsImageUrls:[void 0]},c=[{value:"Updates to @midival/core",id:"updates-to-midivalcore",level:2},{value:"Updates to @midival/node",id:"updates-to-midivalnode",level:2},{value:"Release for @midival/react-native",id:"release-for-midivalreact-native",level:2},{value:"New Website",id:"new-website",level:2}],u={toc:c},d="wrapper";function p(e){let{components:t,...o}=e;return(0,r.kt)(d,(0,a.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"MIDIVal Cover",src:n(4038).Z,width:"2000",height:"1046"})),(0,r.kt)("p",null,"In the last couple of weeks MIDIVal got plenty of new updates:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"}," @midival/core")," got 0.0.17 release with fixed onConnected / onDisconnected handlers"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@midival/node")," got 0.0.2 release with Virtual Ports, onConnected / onDisconnected listeners and new examples in the repository to get you started"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@midival/react-native")," was released!"),(0,r.kt)("li",{parentName:"ul"},"MIDIVal has now brand new website too!")),(0,r.kt)("p",null,"Below I\u2019ll dive deeper into each of those updates and give you quick overview of the changes."),(0,r.kt)("h2",{id:"updates-to-midivalcore"},"Updates to @midival/core"),(0,r.kt)("p",null,"Update to ",(0,r.kt)("inlineCode",{parentName:"p"},"@midival/core")," is small, but if you want to listen to newly connected devices, I\u2019ve got something for you! Now you can subscribe for events when MIDI Device was connected or disconnected."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { MIDIVal } from "@midival/core";\nfunction async connect() {\n    await MIDIVal.connect();\n    MIDIVal.onInputDeviceConnected(newInputDevice => {\n        console.log("Input Connected", newInputDevice.name);\n    });\n    MIDIVal.onInputDeviceDisconnected(disconnectedInputDevice => {\n        console.log("Input Disconnected", disconnectedInputDevice.name);\n    });\n    MIDIVal.onOutputDeviceConnected(newOutputDevice => {\n        console.log("Output Connected", newOutputDevice.name);\n    });\n    MIDIVal.onOutputDeviceDisconnected(disconnectedOutputDevice => {\n        console.log("Output Disconnected", disconnectedOutputDevice.name);\n    });\n}\nconnect();\n')),(0,r.kt)("p",null,"You can install new version via yarn or npm:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @midival/core@0.0.17\n### OR\nnpm install --save @midival/core@0.0.17\n")),(0,r.kt)("h2",{id:"updates-to-midivalnode"},"Updates to @midival/node"),(0,r.kt)("p",null,"New release of MIDIVal core brings support for ",(0,r.kt)("inlineCode",{parentName:"p"},"on(In|Out)putDevice(Dis)Connected")," listeners described above. You can listen to new devices the same way, no matter if you are connecting from the browser or from the Node.js environment!"),(0,r.kt)("p",null,"Moreover, new version adds ability to create new Virtual Inputs and Outputs! Those outputs are registered in your system and are accessible by any program like DAWs, Librarians, etc. This opens up many possibilities like:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Dedicated Virtual MIDI Out Port that acts as a sequencer sending notes to other programs"),(0,r.kt)("li",{parentName:"ul"},"Dedicated Virtual MIDI Input Port for your Node.js synthesiser which can be played from any MIDI-enabled software on your machine"),(0,r.kt)("li",{parentName:"ul"},"Virtual MIDI Out Port that combines messages from multiple sources")),(0,r.kt)("p",null,"Those are just some of the use-cases for this feature. Let\u2019s see how to use it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'mport { MIDIVal } from "@midival/core";\nimport {NodeMIDIAccess} from "../src/index";\nimport * as midi from "midi";\nconst nodeAccess = new NodeMIDIAccess(midi);\nMIDIVal.configureAccessObject(nodeAccess);\nMIDIVal.connect()\n.then(() => {\n    // Creating virtual Input Port\n    const virtualInput = nodeAccess.createVirtualInputPort("Virtual Input");\n    \n    // Creating virtual Output Port\n    const virtualOutput = nodeAccess.createVirtualOutputPort("Virtual Output");\n});\n')),(0,r.kt)("p",null,"New release also includes sample example programs to get you started with using MIDIVal in Node.js environment!"),(0,r.kt)("p",null,"You can install new version via yarn or npm:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @midival/node@0.0.2\n### OR\nnpm install --save @midival/node@0.0.2\n")),(0,r.kt)("h2",{id:"release-for-midivalreact-native"},"Release for @midival/react-native"),(0,r.kt)("p",null,"Beta version of React Native adapter has been released! You can now use exactly same code to write synthesisers for iOS or Android using React Native."),(0,r.kt)("p",null,"Repository contains sample project to get you started."),(0,r.kt)("p",null,"You can install it using yarn or npm. Project is using React Native autolink so all required Podfiles for iOS should be linked automatically."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @midival/react-native\n### OR\nnpm install --save @midival/react-native\n")),(0,r.kt)("h2",{id:"new-website"},"New Website"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://midival.github.io/"},"MIDIVal has a new website now")," to help you get started with the project. I plan to expand it with helpful resources soon but you can use it already to find links to code References and basic code snippets to start hacking!"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Website",src:n(1398).Z,width:"2542",height:"2384"})),(0,r.kt)("p",null,"Have you used MIDIVal already? If so, I am excited hearing from you what do you use it for! As always, contributions and bug reports are welcome."),(0,r.kt)("p",null,"Happy coding!"))}p.isMDXComponent=!0},4038:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/cover-ea0bafad5ca06789e458719086d4863f.webp"},1398:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/website-1b06b288cef78883fed2755f89ca46eb.webp"}}]);