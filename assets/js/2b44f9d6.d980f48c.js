"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7293],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=c(n),d=o,f=s["".concat(p,".").concat(d)]||s[d]||m[d]||i;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[s]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},579:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:1},a="Introduction",l={unversionedId:"mpe/introduction",id:"mpe/introduction",title:"Introduction",description:"What is MPE?",source:"@site/docs/02-mpe/01-introduction.md",sourceDirName:"02-mpe",slug:"/mpe/introduction",permalink:"/docs/mpe/introduction",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"MPE",permalink:"/docs/category/mpe"},next:{title:"MPE Input",permalink:"/docs/mpe/mpe-input"}},p={},c=[{value:"What is MPE?",id:"what-is-mpe",level:2},{value:"MPE Support in MIDIVal",id:"mpe-support-in-midival",level:2},{value:"Not implemented by MIDIVal yet",id:"not-implemented-by-midival-yet",level:2}],u={toc:c},s="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(s,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction"},"Introduction"),(0,o.kt)("h2",{id:"what-is-mpe"},"What is MPE?"),(0,o.kt)("p",null,"MPE is an extension of the MIDI 1 protocol. MPE, or MIDI Polyphonic Expression, adds the ability to vary pressure, pitch and timbre for each note independently (or in fact any 3 dimensions of your sound). It allows for way more expression in your performances."),(0,o.kt)("p",null,"The specification describes a low-level protocol for communication but fortunately, with the new version of MIDIVal you can use might more user-friendly interface and not care about low-level implementation details."),(0,o.kt)("h2",{id:"mpe-support-in-midival"},"MPE Support in MIDIVal"),(0,o.kt)("p",null,"MIDIVal support for MPE includes:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"MIDI Input",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"connecting to input devices"),(0,o.kt)("li",{parentName:"ul"},"ability to subscribe to Zone changes"),(0,o.kt)("li",{parentName:"ul"},"proper routing to proper zones on messages"),(0,o.kt)("li",{parentName:"ul"},"ability to subscribe to new incomming notes"),(0,o.kt)("li",{parentName:"ul"},"ability to subscribe to changes for particular note (including pitch bend, velocity change and 3rd dimension change (timbre))"),(0,o.kt)("li",{parentName:"ul"},"support for master channel pitch bend"))),(0,o.kt)("li",{parentName:"ul"},"MIDI Out",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Connecting to output devices"),(0,o.kt)("li",{parentName:"ul"},"ability to send zone setup messages"),(0,o.kt)("li",{parentName:"ul"},"automatic routing between channels within zone"),(0,o.kt)("li",{parentName:"ul"},"pitch bend for note and master channel")))),(0,o.kt)("h2",{id:"not-implemented-by-midival-yet"},"Not implemented by MIDIVal yet"),(0,o.kt)("p",null,"Mode 3 of MIDI MPE documentation."))}m.isMDXComponent=!0}}]);